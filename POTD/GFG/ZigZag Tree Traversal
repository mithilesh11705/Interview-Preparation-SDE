/*
class Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/
class Solution {
  public:
    vector<int> zigZagTraversal(Node* root) {
        // code here
            if(root==NULL) return {};
            
            vector<int>res;
            queue<Node*>q;
            q.push(root);
            bool dir=true;
            
            while(!q.empty())
            {
                int n=q.size();
                vector<int>level(n);
                
                for(int i=0;i<n;i++)
                {
                   Node* r=q.front();
                   q.pop();
                   
                   int ind= dir ? i :(n-i-1;
                   level[ind]=r->data;
                   
                   if(r->left) q.push(r->left);
                   if(r->right) q.push(r->right);
                }
                
                for(int v:level) res.push_back(v);
                
                dir=!dir;
            }
            
            return res;
    }
};
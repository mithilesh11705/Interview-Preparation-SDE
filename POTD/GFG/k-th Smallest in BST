class Solution {
public:
    void dfs(Node* root, priority_queue<int, vector<int>, greater<int>> &pq) {
        if (!root) return;
        pq.push(root->data);
        dfs(root->left, pq);
        dfs(root->right, pq);
    }

    int kthSmallest(Node* root, int k) {
        if (!root) return -1;
        priority_queue<int, vector<int>, greater<int>> pq;
        dfs(root, pq);

     
        if (k > pq.size()) return -1;

        for (int i = 0; i < k - 1; i++) pq.pop();
        return pq.top();
    }
};

class Solution {
public:
    // int f(int i,int j,vector<vector<int>>& t,vector<vector<int>>& dp,int n)
    // {
    //     if(i==n-1) return t[i][j];

    //     if(dp[i][j]!=-1) return dp[i][j];

    //     int d=t[i][j]+f(i+1,j,t,dp,n);
    //     int dg=t[i][j]+f(i+1,j+1,t,dp,n);

    //     return dp[i][j]=min(d,dg);
    // }
    int minimumTotal(vector<vector<int>>& t) {
       int n = t.size();
        vector<vector<int>> dp = t; // start with last row

        for (int i = n - 2; i >= 0; i--) {
            for (int j = 0; j <= i; j++) {
                dp[i][j] += min(dp[i + 1][j], dp[i + 1][j + 1]);
            }
        }

        return dp[0][0];
    }
};
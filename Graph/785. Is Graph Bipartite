class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();

        vector<int>vis(n,-1);

      for (int i = 0; i < n; ++i) {
            if (vis[i] == -1) {
                queue<int> q;
                vis[i] = 0;
                q.push(i);

                while (!q.empty()) {
                    int node = q.front();
                    int color = vis[node];
                    q.pop();

                    for (auto adj : graph[node]) {
                        if (vis[adj] == -1) {
                            vis[adj] = 1 - color;
                            q.push(adj);
                        }
                        else {
                            if (vis[adj] == color)
                                return false;
                        }
                    }
                }
            }
        }

        return true;
    }
};
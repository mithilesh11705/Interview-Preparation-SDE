class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        
        const int INF = 1e8;
        vector<vector<int>> adj(n, vector<int>(n, INF));

       
        for (int i = 0; i < n; i++) adj[i][i] = 0;

        
        for (auto &edge : edges) {
            int u = edge[0], v = edge[1], wt = edge[2];
            adj[u][v] = wt;
            adj[v][u] = wt;
        }

      
        for (int via = 0; via < n; via++) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (adj[i][via] != INF && adj[via][j] != INF) {
                        adj[i][j] = min(adj[i][j], adj[i][via] + adj[via][j]);
                    }
                }
            }
        }

        int ans = -1, c = INT_MAX;
        for (int i = 0; i < n; i++) {
            int k = 0;
            for (int j = 0; j < n; j++) {
                if (i != j && adj[i][j] <= distanceThreshold) {
                    k++;
                }
            }
     
            if (k <= c) {
                c = k;
                ans = i;
            }
        }

        return ans;
    }
};

class Solution {
  public:
  
    void dfs(int node ,vector<vector<int>>& adj,vector<int>& vis,stack<int>& st)
    {
         vis[node] = 1;
        
        for(auto &neighbor : adj[node]) {
            if(!vis[neighbor]) {
                dfs(neighbor, adj, vis, st);
            }
        }
        
        st.push(node);  
    }
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        // code here
        
        vector<vector<int>>adj(V);
        
        for(auto &edge:edges)
        {
            
            int u=edge[0];
            int v=edge[1];
            
            adj[u].push_back(v);
            
        }
        vector<int>vis(V,0);
        stack<int>st;
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                dfs(i,adj,vis,st);
            }
        }
        vector<int>res;
        while(!st.empty())
        {
            res.push_back(st.top());
            st.pop();
        }
        
        return res;
        
    }
};
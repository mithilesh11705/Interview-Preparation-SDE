class Solution {
public:
    vector<int> sortByFreq(vector<int>& arr) {
        unordered_map<int,int> mp;
        for(int x : arr) {
            mp[x]++; // count frequencies
        }

        // Max-heap: sort by frequency DESC, then by value ASC
        priority_queue<pair<int,int>> maxh;
        for(auto &p : mp) {
            maxh.push({p.second, -p.first}); 
            // negative value so that smaller number comes first if freq is same
        }

        vector<int> res;
        while(!maxh.empty()) {
            int freq = maxh.top().first;
            int val = -maxh.top().second; // restore original value
            maxh.pop();
            for(int i = 0; i < freq; i++) {
                res.push_back(val); // push value freq times
            }
        }

        return res;
    }
};


class Solution {
  public:
    // Function to find whether a path exists from the source to destination.
    bool is_Possible(vector<vector<int>>& grid) {
        // code here
        
        int n=grid.size();
        int m=grid[0].size();
            
        vector<vector<int>>vis(n,vector<int>(m,0));
        int sr,sc,dr,dc;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                {
                     sr=i;
                     sc=j;
                }
                if(grid[i][j]==2)
                {
                    dr=i;
                     dc=j;
                }
            }
        }
        
        queue<pair<int,int>>q;
        vis[sr][sc]=1;
        q.push({sr,sc});
        
        int dl[]={-1,0,1,0};
        int dp[]={0,1,0,-1};
        
        
        while(!q.empty())
        {
            int nr=q.front().first;
            int nc=q.front().second;
            
            q.pop();
            
            for(int i=0;i<4;i++)
            {
                int nrow=dl[i]+nr;
                int ncol=dp[i]+nc;
                
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && (grid[nrow][ncol]==3 || grid[nrow][ncol]==2)
                && vis[nrow][ncol]!=1)
                {
                    if(grid[nrow][ncol]==2) return true;
                    vis[nrow][ncol]=1;
                    q.push({nrow,ncol});
                }
            }
        }
        
        return false;
        
    }
}; 
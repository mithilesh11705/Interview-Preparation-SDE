/* A binary tree Node
class Node {
  public:
    int data;
    Node* left;
    Node* right;

    // Constructor
    Node(int val) {
        data = val;
        left = nullptr;
        right = nullptr;
    }
};
*/

class Solution {
  public:
    vector<vector<int>> levelOrder(Node *root) {
        // code here
        vector<vector<int>>ans;
        if(root==NULL) return {{}};
        queue<Node*>q;
        q.push(root);
        
        while(!q.empty())
        {
            int n=q.size();
            vector<int>res;
            for(int i=0;i<n;i++)
            {   
                Node* r=q.front();
                q.pop();
                if(r->left!=NULL) q.push(r->left);
                if(r->right!=NULL) q.push(r->right);
                res.push_back(r->data);
            
            }
            ans.push_back(res);
        }
        return ans;
    }
};
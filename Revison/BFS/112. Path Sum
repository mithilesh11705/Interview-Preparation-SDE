
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    // bool help(TreeNode* root,int t)
    // {
    //     if(root==NULL) return false;

    //     if(root->left)

    //     return help(root->left,t-root->val) || help(root->right,t-root->val);
    // }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if (root == NULL)
            return false;
        if (root->left == NULL && root->right == NULL && targetSum == root->val)
            return true;

        if (root->left != NULL || root->right != NULL)
            return hasPathSum(root->left, targetSum - root->val) ||
                   hasPathSum(root->right, targetSum - root->val);
        else
            return (targetSum == root->val);
    }
};
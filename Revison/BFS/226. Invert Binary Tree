/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root==NULL) return NULL;

          vector<vector<TreeNode*>>res;
        
        queue<TreeNode*>q;
        q.push(root);

        while(!q.empty())
        {
            vector<TreeNode*>ans;
            int n=q.size();
            for(int i=0;i<n;i++)
            {
                TreeNode* r=q.front();
                q.pop();
                

                swap(r->left,r->right);

                if(r->left!=NULL) q.push(r->left);
                if(r->right!=NULL) q.push(r->right);

            }
        }
    return root;
    }
   
};

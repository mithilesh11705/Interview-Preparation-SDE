class Solution {
  public:
    vector<int> calculateSpan(vector<int>& arr) {
        int n = arr.size();
        stack<pair<int,int>> st;
        vector<int> res;
        vector<int> v(n); 

        for (int i = 0; i < n; i++) {
            if (st.empty()) {
                res.push_back(-1);
            }
            else if (!st.empty() && arr[i] >= st.top().first) {
                while (!st.empty() && arr[i] >= st.top().first) {
                    st.pop();
                }
                if (st.empty()) {
                    res.push_back(-1);
                } else {
                    res.push_back(st.top().second);
                }
            }
            else {
                res.push_back(st.top().second);
            }

            st.push({arr[i], i});
        }

        for (int i = 0; i < n; i++) {
            v[i] = i - res[i];
        }
        
        return v;
    }
};



Use case of The Greater element problem to the left where we store a pair and then compare and atlast we take difference of indexes 